웹마켓 18 장 프로젝트 열어보기. 
여러 방법 중. 
내가 만든 프로젝트에 -> webapp -> 폴더를 생성 후 
원본 파일을 복사하는 방식. 
!
1) 폴더 이름 : ch18_WebMarket
(이 폴더는 jsp 파일을 모아둠, 뷰를 의미함.)
(jsp 버전에 따라서 이름이 : WebContent , 지금은 webapp 입니다. 

2) 가져올 프로젝트에서 해당 .jsp 파일 가져오기(복사)

3)WebContent 안에 
복사 할 내용
1. board : 폴더
2. member : 폴더
3. resources : 폴더
4. 폴더 제외한 나머지 .jsp 파일을 복사함. 

복사할 위치 : 1 ~ 3 번은 webapp여기에 복사. 
===============================================
stop -> 간만히 생각해보니, 해당 폴더를 생성해서, 작업을 할려면. 
안에 있는 모든 경로를 다 바꿔야합니다. 
작업량이 많음. 
===============================================
변경 이유.
하나의 프로젝트에 , 하나의 프로젝트를 대응시켜서 작업. 
변경 작업. 

1. 새로운 다이나믹 웹 프로젝트를 생성합니다. 
이름: ch18_WebMarket_2

2. 해당 파일 복사하기. 
WebContent 안에 
복사 할 내용
1). board : 폴더
2). member : 폴더
3). resources : 폴더 안에 -> 해당 
css, images, js , sql(디비 스크립트 내용, 요게 필요함. )

4). 폴더 제외한 나머지 .jsp 파일을 복사함. 

복사할 위치 -> webapp 

5) 자바 파일 복사. 
원본 src -> 폴더 안에 있는 폴더를 다 복사 하면 됩니다. 

6) lib 및 web.xml  복사하기. 
기존 파일이 없어서 무시. 
(web.xml은 기존에 있는 파일의 이름을 변경해서 web2.xml )
복사 하기. 

3. 디비연결 (데이터베이스 만들기, 테이블 만들기, 임시값 3개 넣기.)

1) 프로젝트 안에 
webapp -> resources -> sql 안에 
각각 테이블 스크립트 있음. 참고해서 
(그러면 테이블있는데, 해당 데이터베이스 이름을 어떻게 하지?
보통 , 디비연결 하는 파일. 보통 dao 폴더 안에 있는 경우가 많음. 

src -> main -> java -> mvc -> database -> 
DBConnection.java 파일이 있음. 열어보기. 

예)
String url = "jdbc:mysql://localhost:3306/WebMarketDB";
여기 문장으로, 해당 디비 종류 및 데이터베이스의 이름을 알아 낼수 있음. 
데이터베이스 이름 : WebMarketDB

디비 서버 전원 켜기 -> 워크 벤치로 접속하기 -> root/1234
각자 root 계정의 알맞은 패스워드 입력하고 들어가기. 

데이터베이스 만들기 
create database WebMarketDB;

디비 사용하기. 
use WebMarketDB;

테이블 만들기. 
4개 테이블 .

1)
CREATE TABLE board (
       num int not null auto_increment,
       id varchar(10) not null,
       name varchar(10) not null,
       subject varchar(100) not null,
       content text not null,
       regist_day varchar(30),
       hit int,
       ip varchar(20),
       PRIMARY KEY (num)
)default CHARSET=utf8;

select * from board;

2)
CREATE TABLE IF NOT EXISTS product(
	p_id VARCHAR(10) NOT NULL,
	p_name VARCHAR(20),
	p_unitPrice  INTEGER,
	p_description TEXT,
   	p_category VARCHAR(20),
	p_manufacturer VARCHAR(20),
	p_unitsInStock LONG,
	p_condition VARCHAR(20),
	p_fileName  VARCHAR(20),
	PRIMARY KEY (p_id)
)default CHARSET=utf8;

3)
create table member ( 
    id varchar(10) not null,
    password varchar(10) not null,
    name varchar(10) not null,
    gender varchar(4),
    birth  varchar(10),
    mail  varchar(30),
    phone varchar(20),
    address varchar(90),
    regist_day varchar(50),    
    primary key(id) 
) default CHARSET=utf8;

select * from member;

4)
INSERT INTO product VALUES('P1234', 'iPhone 6s', 800000, '1334X750 Renina HD display, 8-megapixel iSight Camera','Smart Phone', 'Apple', 1000, 'new', 'P1234.png');
INSERT INTO product VALUES('P1235', 'LG PC gram', 1500000, '3.3-inch,IPS LED display, 5rd Generation Intel Core processors', 'Notebook', 'LG', 1000, 'new', 'P1235.png');
INSERT INTO product VALUES('P1236', 'Galaxy Tab S', 900000, '3.3-inch, 212.8*125.6*6.6mm,  Super AMOLED display, Octa-Core processor', 'Tablet', 'Samsung', 1000, 'new', 'P1236.png');

select * from product;

commit 
해주기. 



4. 1차 실행 테스트. 
webapp여기에 
products.jsp 이 파일 실행 해봅니다. 
!
시큐리티 설정 부분이 확인을 안하고 실행 테스트 중. 
!
1차 테스트 실패 -> 
에러 코드 확인 -> 이클립스 콘솔창에 메세지 확인. 
눈에 띄는 메세지 들중에서 하나 픽. 
심각: 필터 [LogFileFilter]을(를) 시작하는 중 오류 발생

1차 확인 
1)
webapp -> WEB-INF -> web.xml 확인. 열기. 
코드창 하단에 2개의 탭이 보이는데, 디자인 말고, Source 탭 클릭. 
설정 파일안에 시큐리티 관련 코드들이 많이 보였다. 

2)이클립스 -> 프로젝트 익스플러에 -> Servers -> Tomcat v9.0 Server at localhost-config
안에 파일명 
tomcat-users.xml
열어보기. 
35 번줄에 
<user username="admin" password="<must-be-changed>" roles="manager-gui"/>
주석 해제 하고, 패스워드 부분에 변경 : 1234 

변경하기. 
 <role rolename="admin"/>
 
해당 롤의 이름을 : admin 으로 변경. 
 <user username="admin" password="1234" roles="admin"/>
 
해당 파일 저장. 
코드창 하단에 서버 탭에서 
톰캣 서버 우클릭 해서 리스타트 함. 



2차 실행 테스트. -> 실패 
에러 메세지 확인. 
심각: 필터 [LogFileFilter]을(를) 시작하는 중 오류 발생
javax.servlet.ServletException: �α� ������ �� �� �����ϴ�.
	at filter.LogFileFilter.init(LogFileFilter.java:25)
!

오류 파일 에 들어가서 , 봤더니 
filename 부분에서 null로 인식이되는데. 
filename 하는 것은 해당 파일 업로드를 하는 경로를 말함. 
업로드 저장 위치가 달라서 널로 인식이 되는것 같습니다. 
!
filename 찾기 위해서 
이클립스의 강력한 찾기 기능을 이용함. 
ctrl + h 입니다. 

실패 -> filename 못찾음. 

!
단서를 파일 업로드를 처리하는 프로세스 페이지에 들어가서 직접 확인함. 
!
processAddProduct.jsp
!
경로를 
c:/upload 되어있어서, 
각자 자리에, upload 폴더를 만들면 됩니다. 
!

3차 실행 테스트 .
!
실패
로그 메시지 확인. 
!
로깅, 여기서 접속하는 부분에대한 아이피, 접속 시간이라든지, 기록하는 파일이
경로에 못 잡혀서 에러가 발생. 
web.xml 에 46번 줄에 보면 
기록 하는 파일위치를 filename 로 사용하고 있었음. 
<param-name>filename</param-name>
<param-value>c:\\logs\\webmarket.log</param-value>
logs 라는 폴더가 없어서 오류가 났음. 
!

4차 실행 테스트 
일단, 실행됨. 
!
열기는 성공. 
!
---------------------------------------------------
1)상품 목록 리스트에 이미지 불러오기 실패
products.jsp 이 파일에서 확인. 
해당 이미지를 불러오는 경로가 문제입니다. 
(해당 프로젝트에서, 참고로 해당 프로젝트가 원래는 루트폴더입니다. 
즉 여기가 최고 상위 폴더라는 의미. 
그래서, 그외에 폴더에 접근을 못하는것이 정상. )
보안상 이유로, 해당 프로젝트외에 폴더 경로에는 접근이 못합니다. 
그래서, 일단은 해당 프로젝트 내에 있는 정적 자원을 관리하는 폴더에있는 
images 폴더 경로를 사용하겠습니다. 
!
또 문제가 뭐냐면, 추가 상품을 등록을 하면, 현재 upload  c 드라이브위치에
업로드를 하게 되어있음. 그런데, 그 위치는 보안 상 이유로 접근이 안되므로 
불일치, 즉, 상품을 등록해도 등록한 경로와 , 보여주는 경로의 위치가 달라서 
안보임. 이부분은 수업 때 , 좀 더 자세히 이야기 하겠음. 
일단. 리스트에 추가 합니다. 
!
c:/upload 대신 변경 했음. 
<img src="/resources/images/<%=rs.getString("p_fileName")%>" style="width: 100%">
!
추가 이슈. 현재 파일에서 , 현재 폴더를 의미를 하는 " ./ " 표기 주의.
!
변경 후. 
<img src="./resources/images/<%=rs.getString("p_fileName")%>" style="width: 100%">
이미지 목록의 나열 부분이 의도는 3개가 출력되게 설정. 
이슈. 
마지막 3열 상품이 밀리는 현상. 상품 목로 코드에서, 
<%@ include file="dbconn.jsp" %>
이부분이 css 상에 약간 밀리는 현상이 있음. 
그래서, 위치를 변경 해줌. 

이슈 
상품 등록시 , 해당 이미지 upload 위치에 올라가는 이슈를 
이클립스 내부 웹 브라우저를 이용하면, 해다 c 드라이브에 접근이 가능. 
하지만, 이 방법은 잘못된 것임. 테스트 용으로 사용하면 됨. 
!
로컬 환경에서 만 테스트 할 때, 하지만, 실제 운영환경 (현업)에서 절대 사용 못함.

!



2) 회원 가입 후 로그인시 해당 아이디 인식 못하는 문제.
->  webapp -> member 폴더가 있음. 
여기에 파일명 앞에 프로세스라는 단어가 붙은 부분이 실제 뷰에서 넘어온 데이터를 
디비랑 비교를 하는 파일. 
processLoginMember.jsp 열어서 
 SELECT * FROM member WHERE ID=? and password=?  
MEMBER 대문자 테이블 명을 ->  member 소문자로 변경. 

3) 회원 수정 클릭시 오류. 
member/updateMember.jsp 여기파일에서 확인 합니다. 
   SELECT * FROM member WHERE ID=?
MEMBER 대문자 테이블 명을 ->  member 소문자로 변경. 

!
회원가입 페이지, 로그인 페이지 등에서 -> 홈으로 가기위해 클릭시 
부트 스트랩이 적용이 안되는 부분 : 경로 문제 
!
./menu.jsp 파일의 인식 여부. 고쳐 놓을 예정. 
현재 













